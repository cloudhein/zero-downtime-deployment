name: react-app-express-js-ci-cd

on:
  # push:
  #   branches:
  #     - main
  #     - develop
  #     - feat/**
  #     - feature/**

  pull_request:
    branches:
      - main

env:
  NODE-VERSION: 20
  AWS_REGION: ap-northeast-1

jobs:
  repo-meta:
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.container-image.outputs.IMAGE_NAME }}
      repo_name: ${{ steps.repository-name.outputs.REPO_NAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract repository's name
        id: repository-name
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d '/' -f 2)
          echo "REPO_NAME=${REPO_NAME}" >> $GITHUB_OUTPUT

      - name: Create image name
        id: container-image
        run: |
          BRANCH_NAME=$(echo "${{ github.ref_name }}" | sed 's/\//_/g')
          IMAGE_NAME=${BRANCH_NAME}_${{ github.sha }}
          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_OUTPUT

  unit-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.3.0
        with:
          node-version: ${{ env.NODE-VERSION }}

      - name: Install dependencies
        working-directory: ./express-backend
        run: npm install

      - name: Run unit tests
        working-directory: ./express-backend
        run: npm test

      - name: Create issue on test failure
        if: failure()  # Only run if previous step failed
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          curl -X POST \
          -H "Authorization: Bearer $GH_TOKEN" \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/${{ github.repository }}/issues \
          -d '{
            "title": "Unit Test Failure in CI/CD Pipeline",
            "body": "Unit tests failed in GitHub Actions run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }'

  format_code:
    runs-on: ubuntu-latest

    needs: unit-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.3.0
        with:
          node-version: ${{ env.NODE-VERSION }}

      - name: Install dependencies
        working-directory: ./express-backend
        run: npm install

      - name: Format code
        working-directory: ./express-backend
        run: npx prettier --write .

      - name: Push code
        working-directory: ./express-backend
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

          if [[ $(git status --porcelain) ]]; then
            if ! git add .; then
              echo "Error: Failed to stage files"
              exit 1
            fi

            if ! git commit -m "Updated from ref: ${{ github.sha }}"; then
              echo "Error: Failed to commit files"
              exit 1
            fi

            if ! git push 2>&1 | tee push.log; then
              if grep -q "403" push.log; then
                echo "Error: Permission denied (HTTP 403). Exiting."
                exit 1
              fi

              if ! git pull --rebase && git push; then
                echo "Error: failed to push the code after rebase."
                exit 1
              fi
            fi
          else
            echo "Nothing to commit."
          fi